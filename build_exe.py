#!/usr/bin/env python3
"""
Script de build pour cr√©er un ex√©cutable de BootSender
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def clean_build_dirs():
    """Nettoie les r√©pertoires de build pr√©c√©dents"""
    dirs_to_clean = ['build', 'dist', '__pycache__']
    for dir_name in dirs_to_clean:
        if os.path.exists(dir_name):
            print(f"üßπ Nettoyage du r√©pertoire {dir_name}...")
            shutil.rmtree(dir_name)

def build_executable():
    """Construit l'ex√©cutable avec PyInstaller"""
    print("üî® Construction de l'ex√©cutable BootSender...")
    
    # Options PyInstaller
    cmd = [
        'pyinstaller',
        '--onefile',                    # Un seul fichier ex√©cutable
        '--windowed',                   # Pas de console (pour GUI)
        '--name=BootSender',            # Nom de l'ex√©cutable
        '--icon=icon.ico',              # Ic√¥ne (si disponible)
        '--add-data=bootsender.db;.',   # Inclure la base de donn√©es
        '--hidden-import=tkinter',      # Import cach√© pour tkinter
        '--hidden-import=sqlite3',      # Import cach√© pour sqlite3
        '--hidden-import=asyncio',      # Import cach√© pour asyncio
        'main.py'                       # Fichier principal
    ]
    
    # Retirer l'ic√¥ne si elle n'existe pas
    if not os.path.exists('icon.ico'):
        cmd.remove('--icon=icon.ico')
        print("‚ö†Ô∏è  Aucune ic√¥ne trouv√©e, construction sans ic√¥ne")
    
    try:
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ Ex√©cutable cr√©√© avec succ√®s!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erreur lors de la construction: {e}")
        print(f"Sortie d'erreur: {e.stderr}")
        return False

def copy_dependencies():
    """Copie les fichiers n√©cessaires dans le r√©pertoire dist"""
    print("üìÅ Copie des d√©pendances...")
    
    files_to_copy = [
        'config.py',
        'database.py',
        'bootsender.db'
    ]
    
    dist_dir = Path('dist')
    if not dist_dir.exists():
        print("‚ùå R√©pertoire dist non trouv√©!")
        return False
    
    for file_name in files_to_copy:
        if os.path.exists(file_name):
            shutil.copy2(file_name, dist_dir)
            print(f"‚úÖ {file_name} copi√©")
        else:
            print(f"‚ö†Ô∏è  {file_name} non trouv√©")
    
    return True

def create_installer_info():
    """Cr√©e un fichier d'information pour l'installation"""
    info_content = """
# BootSender - Ex√©cutable

## Installation
1. Copiez le fichier BootSender.exe o√π vous voulez
2. Assurez-vous que les fichiers suivants sont dans le m√™me r√©pertoire :
   - config.py (avec votre token Telegram)
   - database.py
   - bootsender.db

## Utilisation
Double-cliquez sur BootSender.exe pour lancer l'application.

## Configuration
Modifiez le fichier config.py avec votre token de bot Telegram avant la premi√®re utilisation.
"""
    
    with open('dist/INSTALLATION.txt', 'w', encoding='utf-8') as f:
        f.write(info_content)
    
    print("‚úÖ Fichier d'installation cr√©√©")

def main():
    """Fonction principale du script de build"""
    print("üöÄ D√©but de la construction de l'ex√©cutable BootSender")
    print("=" * 50)
    
    # V√©rifier que nous sommes dans le bon r√©pertoire
    if not os.path.exists('main.py'):
        print("‚ùå Fichier main.py non trouv√©! Assurez-vous d'√™tre dans le bon r√©pertoire.")
        sys.exit(1)
    
    # Nettoyer les anciens builds
    clean_build_dirs()
    
    # Construire l'ex√©cutable
    if not build_executable():
        print("‚ùå √âchec de la construction de l'ex√©cutable")
        sys.exit(1)
    
    # Copier les d√©pendances
    if not copy_dependencies():
        print("‚ùå √âchec de la copie des d√©pendances")
        sys.exit(1)
    
    # Cr√©er les informations d'installation
    create_installer_info()
    
    print("=" * 50)
    print("üéâ Construction termin√©e avec succ√®s!")
    print("üìÅ L'ex√©cutable se trouve dans le r√©pertoire 'dist/'")
    print("üìã Lisez le fichier INSTALLATION.txt pour les instructions")

if __name__ == "__main__":
    main()